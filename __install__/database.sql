-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Hôte : 127.0.0.1:3306
-- Généré le :  lun. 24 fév. 2020 à 12:34
-- Version du serveur :  5.7.23
-- Version de PHP :  5.6.38

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de données :  `wyca_elodie`
--

-- --------------------------------------------------------

--
-- Structure de la table `api_action`
--

DROP TABLE IF EXISTS `api_action`;
CREATE TABLE IF NOT EXISTS `api_action` (
  `id_action` int(10) NOT NULL AUTO_INCREMENT,
  `groupe` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `messageType` varchar(255) NOT NULL,
  `function_name` varchar(255) NOT NULL,
  `details` text NOT NULL,
  PRIMARY KEY (`id_action`),
  KEY `groupe` (`groupe`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_action`
--

INSERT INTO `api_action` (`id_action`, `groupe`, `nom`, `messageType`, `function_name`, `details`) VALUES
(3, 'Navigation', '/go_to_pose', 'wyca_bt_tool_nodes/GoToPoseAction', 'RobotMoveTo', 'geometry_msgs/PoseStamped target_pose\r\n---\r\nstring error\r\n---\r\nstring current_step'),
(4, 'Navigation', '/docking/dock', 'keylo_docking/DockAction', 'RobotDock', '---\r\nstring error\r\n---\r\nstring current_docking_step'),
(5, 'Navigation', '/docking/undock', 'keylo_docking/UndockAction', 'RobotUndock', '---\r\nstring error\r\n---\r\nstring current_undocking_step');

-- --------------------------------------------------------

--
-- Structure de la table `api_action_user`
--

DROP TABLE IF EXISTS `api_action_user`;
CREATE TABLE IF NOT EXISTS `api_action_user` (
  `id_action_user` int(10) NOT NULL AUTO_INCREMENT,
  `id_action` int(10) NOT NULL,
  `id_user` int(10) NOT NULL,
  PRIMARY KEY (`id_action_user`),
  KEY `id_service` (`id_action`),
  KEY `id_user` (`id_user`)
) ENGINE=MyISAM AUTO_INCREMENT=82 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_action_user`
--

INSERT INTO `api_action_user` (`id_action_user`, `id_action`, `id_user`) VALUES
(81, 3, 1);

-- --------------------------------------------------------

--
-- Structure de la table `api_service`
--

DROP TABLE IF EXISTS `api_service`;
CREATE TABLE IF NOT EXISTS `api_service` (
  `id_service` int(10) NOT NULL AUTO_INCREMENT,
  `groupe` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `messageType` varchar(255) NOT NULL,
  `function_name` varchar(255) NOT NULL,
  `details` text NOT NULL,
  PRIMARY KEY (`id_service`),
  KEY `groupe` (`groupe`)
) ENGINE=MyISAM AUTO_INCREMENT=76 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_service`
--

INSERT INTO `api_service` (`id_service`, `groupe`, `nom`, `messageType`, `function_name`, `details`) VALUES
(65, 'Safety', '/sensors/safety_stop/refresh_safety_stop', 'std_srvs/Trigger', 'RefreshSafetyStop', '---\r\nbool success # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(66, 'Safety', '/sensors/safety_stop/refresh_freewheel_state', 'std_srvs/Trigger', 'RefreshFreewheelState', '---\r\nbool success # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(12, 'Navigation', '/keylo_api/navigation/do_stop', 'std_srvs/Trigger', 'RobotStop', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(14, 'Navigation', '/keylo_api/navigation/get_robot_pose', 'keylo_api/GetRobotPose', 'RobotGetPos', '---\r\nbool success				# true if updated data available\r\nstring message				# error message in case successfalse\r\ngeometry_msgs/Pose2D robot_pose		# the robot pose in the map frame\r\n\r\n'),
(15, 'Navigation', '/keylo_api/recovery/set_robot_pose', 'keylo_api/SetRobotPose', 'RobotSetPos', 'geometry_msgs/Pose2D robot_pose	# The robot pose. x and y in meters, theta in radians\r\n---\r\nbool success			# \r\nstring message			# Error message in case successfalse / No error implemented\r\n'),
(18, 'Leds', '/elodie_api/leds/conf_led_anim', 'elodie_u_controller/ConfLedAnim', 'LedsConfigAnimation', 'uint8 state			# id de l&#39;etat du robot ÃƒÆ’  modifier\r\nuint8 anim			# id de l&#39;animation dÃƒÆ’Ã‚Â©sirÃƒÆ’Ã‚Â©\r\nuint8 R				# Niveau de rouge de la couleur\r\nuint8 G				# Niveau de vert de la couleur\r\nuint8 B				# Niveau de bleu de la couleur\r\n---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse'),
(19, 'Navigation', '/sensors/get_current_floor', 'elodie_u_controller/GetCurrentFloor', 'RobotGetCurrentFloor', '---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse\r\nuint8 current_floor		# the current floor'),
(20, 'Leds', '/elodie_api/leds/get_led_is_light_mode', 'elodie_u_controller/GetLedIsLightMode', 'LedsGetIsLightMode', '---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse\r\nbool is_light_mode	# true if led is in manual mode\r\n\r\n'),
(21, 'Leds', 'elodie_api/leds/get_led_is_manual_mode', 'elodie_u_controller/GetLedIsManualMode', 'LedsGetIsManualMode', '---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse\r\nbool is_manual_mode	# true if led is in manual mode\r\n\r\n'),
(22, 'Sensors', '/sensors/get_sensors_data', 'elodie_u_controller/GetSensorsData', 'SensorsGetAltimetreData', '---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse\r\nfloat32 temperature	# Temperature Celcuis\r\nfloat32 pressure	# Pressure Pa\r\nfloat32 altitude	# Altitude meter'),
(23, 'Navigation', '/sensors/set_current_floor', 'elodie_u_controller/SetCurrentFloor', 'RobotSetCurrentFloor', 'uint8 current_floor	# the current floor\r\n---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse'),
(24, 'Leds', '/elodie_api/leds/set_led_is_light_mode', 'std_srvs/SetBool', 'LedsIsLightMode', 'bool data # enabling / disabling\r\n---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(25, 'Leds', '/elodie_api/leds/set_led_is_manual_mode', 'elodie_u_controller/SetLedIsManualMode', 'LedsIsManualMode', 'bool is_manual_mode	# true if led is in manual mode\r\n---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse'),
(26, 'Interface', '/keylo_interface/do_browser_restart', 'keylo_interface/DoBrowserRestart', 'RestartBrowser', 'bool kiosk_mode		# If the browser should restart in kiosk mode\r\n---\r\nbool success		# true if executed, false if not\r\nstring message		# &#34;Error[301]: can&#39;t restart browser because one or more tab is in a non-restartable state&#34;\r\n'),
(30, 'Navigation', '/keylo_state/set_keylo_state', 'keylo_state/SetKeyloState', 'RobotSetState', 'string robot_state		# Set the current robot state to this value\r\n---\r\nbool success		# If state set\r\nstring message		# Error message in case successfalse / Error[401]: not a valid state\r\n\r\n'),
(51, 'Interne', '', 'std_srvs/Empty	', 'InitDynamicsTopics', ''),
(45, 'Map', '', 'std_srvs/Empty', 'MapGetHTML', '---\r\nbool success			# If updated data available\r\nstring message			# Error message in case successfalse\r\nstring html_map		# HTML code to display map'),
(46, 'Navigation', '', 'std_srvs/Empty', 'GetPOIs', '---\r\nbool success			# true if updated data available\r\nstring message			# error message in case successfalse\r\nkeylo_api/Poi[] pois		# list of POIs\r\n'),
(47, 'Navigation', '', 'std_srvs/Empty', 'GetBoxs', '---\r\nbool success			# true if updated data available\r\nstring message			# error message in case successfalse\r\nkeylo_api/Box[] pois		# list of Boxs\r\n'),
(48, 'Navigation', '', 'std_srvs/String', 'RobotMoveToPOI', 'string poi_name	# the name of the POI to send the robot to\r\n---\r\nbool success	# true if executed, false if not\r\nstring message	# Error message in case successfalse / &#34;Error[001]: destination is unreachable&#34; / &#34;Error[002]: destination is reachable but the robot is blocked in its starting position&#34; / Error[003]: Invalid box number or destination&#34; / &#34;Error[004]: Robot in final docking stage,impossible to navigate, wait for the docking procedure to finish&#34;\r\ngeometry_msgs/Pose2D goal_pose_feedback	# the pose of the robot destination in map coordinates'),
(50, 'Map', '', 'std_srvs/Empty', 'MapInit', 'uint8 maxWidth # max width of the map\r\nuint8 maxHeight # max height of the map\r\n---'),
(52, 'Interne', '', 'std_srvs/Empty	', 'InitDynamicServices', ''),
(57, 'Tools', 'tools/pose2D_to_posestamped', 'wyca_bt_tool_nodes/Pose2DToPoseStamped', 'ConvertPose2DToPosesStamped', 'geometry_msgs/Pose2D pose_to_convert\r\n---\r\ngeometry_msgs/PoseStamped pose_converted'),
(58, 'Navigation', '/docking/get_docking_state', 'std_srvs/Trigger', 'GetDockingState', '---\r\nbool success # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(59, 'Navigation', '/docking/override_docking_state', 'std_srvs/SetBool', 'SetDockingState', 'bool data # enabling / disabling\r\n---\r\nbool success # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(64, 'Mapping', '/wyca_mapping/stop', 'wyca_mapping/StopMapping', 'MappingStop', '---\r\nsensor_msgs/CompressedImage final_map\r\nbool success\r\nstring message'),
(67, 'Navigation', '/wyca_api/navigation/start', 'wyca_api/StartNavigation', 'NavigationStart', 'bool init_from_mapping\r\n---\r\nbool success\r\nstring message'),
(63, 'Mapping', '/wyca_mapping/start', 'std_srvs/Trigger', 'MappingStart', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(68, 'Navigation', '/wyca_api/navigation/stop', 'std_srvs/Trigger', 'NavigationStop', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(71, 'Navigation', '/wyca_api/navigation/is_started', 'std_srvs/Trigger', 'NavigationGetState', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(72, 'Mapping', '/wyca_mapping/is_started', 'std_srvs/Trigger', 'MappingGetState', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(73, 'Navigation', '/wyca_api/do_reload_maps', 'std_srvs/Trigger', 'NavigationReloadMaps', '---\r\nbool success   # indicate successful run of triggered service\r\nstring message # informational, e.g. for error messages'),
(75, 'Latency', '/wyca_api/latency_start', 'wyca_api/StartLatency', 'LatencyStart', 'int16 num\r\n---\r\nbool success		# true if updated data available\r\nstring message		# error message in case successfalse');

-- --------------------------------------------------------

--
-- Structure de la table `api_service_user`
--

DROP TABLE IF EXISTS `api_service_user`;
CREATE TABLE IF NOT EXISTS `api_service_user` (
  `id_service_user` int(10) NOT NULL AUTO_INCREMENT,
  `id_service` int(10) NOT NULL,
  `id_user` int(10) NOT NULL,
  PRIMARY KEY (`id_service_user`),
  KEY `id_service` (`id_service`),
  KEY `id_user` (`id_user`)
) ENGINE=MyISAM AUTO_INCREMENT=1629 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_service_user`
--

INSERT INTO `api_service_user` (`id_service_user`, `id_service`, `id_user`) VALUES
(1628, 57, 1),
(1627, 22, 1),
(1626, 65, 1),
(1625, 66, 1),
(1624, 68, 1),
(1623, 67, 1),
(1622, 71, 1),
(1621, 73, 1),
(1620, 23, 1),
(1619, 19, 1),
(1618, 30, 1),
(1617, 15, 1),
(1616, 14, 1),
(1615, 12, 1),
(1614, 59, 1),
(1613, 58, 1),
(1612, 48, 1),
(1611, 47, 1),
(1610, 46, 1),
(1609, 64, 1),
(1608, 63, 1),
(1607, 72, 1),
(1606, 50, 1),
(1605, 45, 1),
(1604, 21, 1),
(1603, 25, 1),
(1602, 24, 1),
(1601, 20, 1),
(1600, 18, 1),
(1599, 75, 1),
(1598, 52, 1),
(1597, 51, 1),
(1596, 26, 1);

-- --------------------------------------------------------

--
-- Structure de la table `api_topic`
--

DROP TABLE IF EXISTS `api_topic`;
CREATE TABLE IF NOT EXISTS `api_topic` (
  `id_topic` int(10) NOT NULL AUTO_INCREMENT,
  `groupe` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `messageType` varchar(255) NOT NULL,
  `event_name` varchar(255) NOT NULL,
  `publish_name` varchar(255) NOT NULL,
  `id_service_update` int(10) NOT NULL,
  PRIMARY KEY (`id_topic`),
  KEY `groupe` (`groupe`),
  KEY `update_service` (`id_service_update`)
) ENGINE=MyISAM AUTO_INCREMENT=90 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_topic`
--

INSERT INTO `api_topic` (`id_topic`, `groupe`, `nom`, `messageType`, `event_name`, `publish_name`, `id_service_update`) VALUES
(4, 'Other', '/keylo_api/email', 'std_msgs/String', 'onLogEmailNew', 'LogSendEmail', 0),
(16, 'Other', '/keylo_api/log_msg', 'std_msgs/String', 'onLogMsg', 'LogSendMsg', 0),
(20, 'Navigation', '/docking/docking_state', 'std_msgs/String', 'onNavigationRobotStateChange', '', 58),
(22, 'Other', '/keylo_api/sms', 'std_msgs/String', 'onLogSMSNew', 'LogSendSMS', 0),
(23, 'Navigation', '/sensors/current_floor', 'std_msgs/Int8', 'onNavigationCurrentFloorChange', '', 0),
(24, 'Leds', '/elodie_api/leds/current_led_animation_mode', 'std_msgs/Int8', 'onLedsCurrentAnimationModeChange', '', 0),
(25, 'Leds', '/elodie_api/leds/current_led_robot_state_mode', 'std_msgs/Int8', 'onLedsCurrentRobotStateModeChange', '', 0),
(26, 'Leds', '/elodie_api/leds/is_light_mode', 'std_msgs/Bool', 'onLedsIsLightModeChange', '', 20),
(27, 'Leds', '/elodie_api/leds/is_manual_mode', 'std_msgs/Bool', 'onLedsIsManualModeChange', '', 21),
(28, 'Sensors', '/sensors/BMP280_values', 'elodie_u_controller/SensorsObject', 'onSensorsAltimeterChange', '', 0),
(29, 'Leds', '/keylo_arduino/set_anim_led', 'keylo_arduino/AnimLedObject', 'onLedsSetAnimLedChange', '', 0),
(77, 'BMS', '/bms/relative_SOC_percentage', 'std_msgs/UInt8', 'onSOCChange', '', 0),
(78, 'BMS', '/bms/currentA', 'std_msgs/Float32', 'onCurrentAChange', '', 0),
(79, 'BMS', '/bms/is_powered', 'std_msgs/Bool', 'onIsPoweredChange', '', 0),
(80, 'BMS', '/bms/remaining_capacity_Wh', 'std_msgs/UInt16', 'onRemainingCapacityWhChange', '', 0),
(81, 'BMS', '/bms/time_remaining_to_empty_min', 'std_msgs/UInt16', 'onTimeRemainingToEmptyMinChange', '', 0),
(82, 'BMS', '/bms/time_remaining_to_full_min', 'std_msgs/UInt16', 'onTimeRemainingToFullMinChange', '', 0),
(83, 'Safety', '/sensors/safety_stop/is_safety_stop', 'std_msgs/Bool', 'onIsSafetyStopChange', '', 65),
(84, 'Safety', '/sensors/freewheel_state/is_freewheel', 'std_msgs/Bool', 'onIsFreewheelChange', '', 66),
(62, 'Map', '', 'std_msg/String', 'onMapBoxClick', '', 0),
(63, 'Map', '', 'geometry_msgs/Pose2D', 'onMapRouteClick', '', 0),
(64, 'Map', '', 'void', 'onMapIsLoaded', '', 0),
(65, 'Sensors', '/scan_throttled', 'sensor_msgs/LaserScan', 'onSensorsLaserScan', '', 0),
(68, 'Log', '/logs/capture', 'std_msgs/String', 'onCaptureLog', '', 0),
(71, 'Log', '/logs/nav', 'std_msgs/String', 'onNavLog', '', 0),
(74, 'Mapping', '/wyca_mapping/robot_pose_in_building_map', 'geometry_msgs/Pose2D', 'onMappingRobotPoseChange', '', 0),
(76, 'Mapping', '/wyca_mapping/map_in_construction', 'wyca_mapping/MapInConstruction', 'onMapInConstruction', '', 0),
(85, 'Navigation', '/wyca_api/navigation/is_started', 'std_msgs/Bool', 'onNavigationStateChange', '', 71),
(86, 'Mapping', '/wyca_mapping/is_started', 'std_msgs/Bool', 'onMappingStateChange', '', 72),
(87, 'Navigation', '/wyca_api/navigation/robot_pose', 'geometry_msgs/Pose2D', 'onRobotPoseChange', '', 0),
(89, 'Latency', '/wyca_api/latency_return', 'std_msgs/Int16', 'onLatencyReturn', '', 0);

-- --------------------------------------------------------

--
-- Structure de la table `api_topic_pub`
--

DROP TABLE IF EXISTS `api_topic_pub`;
CREATE TABLE IF NOT EXISTS `api_topic_pub` (
  `id_topic_pub` int(10) NOT NULL AUTO_INCREMENT,
  `groupe` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `messageType` varchar(255) NOT NULL,
  `function_name` varchar(255) NOT NULL,
  `details` text NOT NULL,
  PRIMARY KEY (`id_topic_pub`),
  KEY `groupe` (`groupe`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_topic_pub`
--

INSERT INTO `api_topic_pub` (`id_topic_pub`, `groupe`, `nom`, `messageType`, `function_name`, `details`) VALUES
(1, 'Navigation', '/joystick_control/twist_safe_to_be', 'geometry_msgs/Twist', 'TeleopRobot', ''),
(2, 'Navigation', '/joystick_control/is_unsafe_off', 'std_msgs/Bool', 'JoystickIsUnsafeOff', ''),
(3, 'Navigation', '/joystick_control/is_safe_off', 'std_msgs/Bool', 'JoystickIsSafeOff', ''),
(4, 'Navigation', '/disable_static_local_costmap_layer', 'std_msgs/Empty', 'DisableStaticCostmap', '');

-- --------------------------------------------------------

--
-- Structure de la table `api_topic_pub_user`
--

DROP TABLE IF EXISTS `api_topic_pub_user`;
CREATE TABLE IF NOT EXISTS `api_topic_pub_user` (
  `id_topic_pub_user` int(10) NOT NULL AUTO_INCREMENT,
  `id_topic_pub` int(10) NOT NULL,
  `id_user` int(10) NOT NULL,
  PRIMARY KEY (`id_topic_pub_user`),
  KEY `id_topic_pub` (`id_topic_pub`),
  KEY `id_user` (`id_user`)
) ENGINE=MyISAM AUTO_INCREMENT=82 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_topic_pub_user`
--

INSERT INTO `api_topic_pub_user` (`id_topic_pub_user`, `id_topic_pub`, `id_user`) VALUES
(81, 1, 1),
(80, 2, 1),
(79, 3, 1),
(78, 4, 1);

-- --------------------------------------------------------

--
-- Structure de la table `api_topic_user`
--

DROP TABLE IF EXISTS `api_topic_user`;
CREATE TABLE IF NOT EXISTS `api_topic_user` (
  `id_topic_user` int(10) NOT NULL AUTO_INCREMENT,
  `id_topic` int(10) NOT NULL,
  `id_user` int(10) NOT NULL,
  PRIMARY KEY (`id_topic_user`),
  KEY `id_topic` (`id_topic`),
  KEY `id_user` (`id_user`)
) ENGINE=MyISAM AUTO_INCREMENT=1957 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `api_topic_user`
--

INSERT INTO `api_topic_user` (`id_topic_user`, `id_topic`, `id_user`) VALUES
(1956, 28, 1),
(1955, 65, 1),
(1954, 83, 1),
(1953, 84, 1),
(1952, 22, 1),
(1951, 16, 1),
(1950, 4, 1),
(1949, 85, 1),
(1948, 87, 1),
(1947, 23, 1),
(1946, 86, 1),
(1945, 74, 1),
(1944, 76, 1),
(1943, 64, 1),
(1942, 63, 1),
(1941, 62, 1),
(1940, 71, 1),
(1939, 68, 1),
(1938, 29, 1),
(1937, 27, 1),
(1936, 26, 1),
(1935, 25, 1),
(1934, 24, 1),
(1933, 89, 1),
(1932, 82, 1),
(1931, 81, 1),
(1930, 80, 1),
(1929, 77, 1),
(1928, 79, 1),
(1927, 78, 1);

-- --------------------------------------------------------

--
-- Structure de la table `area`
--

DROP TABLE IF EXISTS `area`;
CREATE TABLE IF NOT EXISTS `area` (
  `id_area` int(11) NOT NULL AUTO_INCREMENT,
  `id_plan` int(11) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `comment` text NOT NULL,
  `couleur_r` int(3) NOT NULL,
  `couleur_g` int(3) NOT NULL,
  `couleur_b` int(3) NOT NULL,
  `is_forbidden` tinyint(1) NOT NULL DEFAULT '0',
  `deleted` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id_area`),
  KEY `id_plan` (`id_plan`),
  KEY `is_forbidden` (`is_forbidden`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `area`
--

INSERT INTO `area` (`id_area`, `id_plan`, `nom`, `comment`, `couleur_r`, `couleur_g`, `couleur_b`, `is_forbidden`, `deleted`) VALUES
(18, 49, '', '', 0, 0, 0, 1, 0),
(19, 49, '', '', 0, 0, 0, 1, 0),
(20, 49, '', '', 0, 0, 0, 1, 0),
(21, 49, '', '', 0, 0, 0, 1, 1),
(22, 49, '', '', 0, 0, 0, 1, 0),
(23, 49, '', '', 87, 159, 177, 0, 0);

-- --------------------------------------------------------

--
-- Structure de la table `area_config`
--

DROP TABLE IF EXISTS `area_config`;
CREATE TABLE IF NOT EXISTS `area_config` (
  `id_area_config` int(11) NOT NULL AUTO_INCREMENT,
  `id_area` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `value` text NOT NULL,
  PRIMARY KEY (`id_area_config`),
  KEY `id_area` (`id_area`),
  KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=127 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `area_config`
--

INSERT INTO `area_config` (`id_area_config`, `id_area`, `name`, `value`) VALUES
(126, 23, 'max_speed', ''),
(125, 23, 'max_speed_mode', 'Automatic'),
(124, 23, 'led_animation', '4'),
(123, 23, 'led_animation_mode', 'Manual'),
(122, 23, 'led_color', 'rgb(45,186,76)'),
(121, 23, 'led_color_mode', 'Manual');

-- --------------------------------------------------------

--
-- Structure de la table `area_point`
--

DROP TABLE IF EXISTS `area_point`;
CREATE TABLE IF NOT EXISTS `area_point` (
  `id_area_point` int(11) NOT NULL AUTO_INCREMENT,
  `id_area` int(11) NOT NULL,
  `x` decimal(10,6) NOT NULL,
  `y` decimal(10,6) NOT NULL,
  PRIMARY KEY (`id_area_point`),
  KEY `id_poly` (`id_area`)
) ENGINE=MyISAM AUTO_INCREMENT=888 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `area_point`
--

INSERT INTO `area_point` (`id_area_point`, `id_area`, `x`, `y`) VALUES
(887, 23, '48.395672', '9.610365'),
(886, 23, '53.363440', '6.405354'),
(885, 23, '50.639180', '3.200342'),
(884, 23, '45.671412', '6.565604'),
(883, 22, '37.979385', '21.468907'),
(882, 22, '46.152164', '20.507404'),
(879, 20, '58.972210', '20.507404'),
(881, 22, '41.665148', '16.020388'),
(878, 20, '62.497722', '17.622894'),
(877, 20, '61.696469', '12.334625'),
(876, 20, '61.375968', '12.334625'),
(875, 20, '57.369704', '10.892370'),
(874, 20, '57.209453', '11.052620'),
(263, 21, '41.024146', '12.494875'),
(873, 20, '54.965945', '21.148406'),
(880, 22, '32.530866', '18.103645'),
(262, 21, '41.024146', '12.494875'),
(872, 19, '27.723349', '12.014124'),
(261, 21, '49.196925', '12.334625'),
(871, 19, '29.165604', '6.245103'),
(260, 21, '49.036674', '4.963099'),
(870, 19, '22.435080', '3.520844'),
(259, 21, '41.184396', '6.565604'),
(869, 19, '22.595330', '14.257632'),
(868, 18, '7.087222', '23.275928'),
(867, 18, '13.279215', '20.441039'),
(866, 18, '8.728473', '14.398250'),
(865, 18, '5.222163', '14.696660'),
(864, 18, '5.669777', '21.336267');

-- --------------------------------------------------------

--
-- Structure de la table `configuration`
--

DROP TABLE IF EXISTS `configuration`;
CREATE TABLE IF NOT EXISTS `configuration` (
  `id_configuration` int(10) NOT NULL AUTO_INCREMENT,
  `nom` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  `valeur` varchar(255) NOT NULL,
  PRIMARY KEY (`id_configuration`),
  KEY `nom` (`nom`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `configuration`
--

INSERT INTO `configuration` (`id_configuration`, `nom`, `description`, `valeur`) VALUES
(3, 'CURRENT_SITE', '', '1'),
(4, 'CURRENT_MAP', '', '59'),
(5, 'level_min_gotodock', '', '10'),
(6, 'level_min_dotask', '', '53'),
(7, 'level_min_gotodock_aftertask', '', '50'),
(8, 'LAST_UPDATE', '', '202002061300.php');

-- --------------------------------------------------------

--
-- Structure de la table `droit`
--

DROP TABLE IF EXISTS `droit`;
CREATE TABLE IF NOT EXISTS `droit` (
  `id_droit` int(10) NOT NULL AUTO_INCREMENT,
  `section` varchar(50) NOT NULL,
  `sous_section` varchar(50) NOT NULL,
  `action` varchar(10) NOT NULL,
  PRIMARY KEY (`id_droit`),
  KEY `section` (`section`),
  KEY `sous_section` (`sous_section`),
  KEY `action` (`action`)
) ENGINE=MyISAM AUTO_INCREMENT=69 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `droit`
--

INSERT INTO `droit` (`id_droit`, `section`, `sous_section`, `action`) VALUES
(1, 'tasks', '', 'view'),
(2, 'tasks', '', 'add'),
(3, 'tasks', '', 'edit'),
(4, 'tasks', '', 'delete'),
(5, 'maps', '', 'view'),
(6, 'maps', '', 'add'),
(7, 'maps', '', 'edit'),
(8, 'maps', '', 'delete'),
(9, 'setup', 'sites', 'view'),
(10, 'setup', 'sites', 'add'),
(11, 'setup', 'sites', 'edit'),
(12, 'setup', 'sites', 'delete'),
(13, 'setup', 'users', 'view'),
(14, 'setup', 'users', 'add'),
(15, 'setup', 'users', 'edit'),
(16, 'setup', 'users', 'delete'),
(17, 'setup', 'user_groups', 'view'),
(18, 'setup', 'user_groups', 'add'),
(19, 'setup', 'user_groups', 'edit'),
(20, 'setup', 'user_groups', 'delete'),
(21, 'setup', 'export', 'view'),
(22, 'setup', 'export', 'add'),
(23, 'setup', 'export', 'edit'),
(24, 'setup', 'export', 'delete'),
(25, 'setup', 'configuration', 'view'),
(26, 'setup', 'configuration', 'add'),
(27, 'setup', 'configuration', 'edit'),
(28, 'setup', 'configuration', 'delete'),
(29, 'traduction', '', 'view'),
(30, 'traduction', '', 'add'),
(31, 'traduction', '', 'edit'),
(32, 'traduction', '', 'delete'),
(33, 'tasks', '', 'view'),
(34, 'tasks', '', 'add'),
(35, 'tasks', '', 'edit'),
(36, 'tasks', '', 'delete'),
(37, 'maps', '', 'view'),
(38, 'maps', '', 'add'),
(39, 'maps', '', 'edit'),
(40, 'maps', '', 'delete'),
(41, 'setup', 'robot', 'view'),
(42, 'setup', 'robot', 'add'),
(43, 'setup', 'robot', 'edit'),
(44, 'setup', 'robot', 'delete'),
(45, 'setup', 'sites', 'view'),
(46, 'setup', 'sites', 'add'),
(47, 'setup', 'sites', 'edit'),
(48, 'setup', 'sites', 'delete'),
(49, 'setup', 'users', 'view'),
(50, 'setup', 'users', 'add'),
(51, 'setup', 'users', 'edit'),
(52, 'setup', 'users', 'delete'),
(53, 'setup', 'user_groups', 'view'),
(54, 'setup', 'user_groups', 'add'),
(55, 'setup', 'user_groups', 'edit'),
(56, 'setup', 'user_groups', 'delete'),
(57, 'setup', 'export', 'view'),
(58, 'setup', 'export', 'add'),
(59, 'setup', 'export', 'edit'),
(60, 'setup', 'export', 'delete'),
(61, 'setup', 'configuration', 'view'),
(62, 'setup', 'configuration', 'add'),
(63, 'setup', 'configuration', 'edit'),
(64, 'setup', 'configuration', 'delete'),
(65, 'traduction', '', 'view'),
(66, 'traduction', '', 'add'),
(67, 'traduction', '', 'edit'),
(68, 'traduction', '', 'delete');

-- --------------------------------------------------------

--
-- Structure de la table `email_send`
--

DROP TABLE IF EXISTS `email_send`;
CREATE TABLE IF NOT EXISTS `email_send` (
  `id_email` int(10) NOT NULL AUTO_INCREMENT,
  `sended` tinyint(1) NOT NULL DEFAULT '0',
  `destinataire` varchar(255) NOT NULL,
  `sujet` text NOT NULL,
  `message` text NOT NULL,
  PRIMARY KEY (`id_email`),
  KEY `sended` (`sended`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Structure de la table `groupe_droit`
--

DROP TABLE IF EXISTS `groupe_droit`;
CREATE TABLE IF NOT EXISTS `groupe_droit` (
  `id_groupe_droit` int(10) NOT NULL AUTO_INCREMENT,
  `id_groupe_user` int(10) NOT NULL,
  `id_droit` int(10) NOT NULL,
  PRIMARY KEY (`id_groupe_droit`),
  KEY `id_groupe` (`id_groupe_user`),
  KEY `id_droit` (`id_droit`)
) ENGINE=MyISAM AUTO_INCREMENT=101 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `groupe_droit`
--

INSERT INTO `groupe_droit` (`id_groupe_droit`, `id_groupe_user`, `id_droit`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 1, 3),
(4, 1, 4),
(5, 1, 5),
(6, 1, 6),
(7, 1, 7),
(8, 1, 8),
(9, 1, 9),
(10, 1, 10),
(11, 1, 11),
(12, 1, 12),
(13, 1, 13),
(14, 1, 14),
(15, 1, 15),
(16, 1, 16),
(17, 1, 17),
(18, 1, 18),
(19, 1, 19),
(20, 1, 20),
(21, 1, 21),
(22, 1, 22),
(23, 1, 23),
(24, 1, 24),
(25, 1, 25),
(26, 1, 26),
(27, 1, 27),
(28, 1, 28),
(29, 1, 29),
(30, 1, 30),
(31, 1, 31),
(32, 1, 32),
(64, 3, 24),
(63, 3, 23),
(62, 3, 22),
(61, 3, 21),
(60, 3, 12),
(59, 3, 11),
(58, 3, 10),
(57, 3, 9),
(56, 3, 8),
(55, 3, 7),
(54, 3, 6),
(53, 3, 5),
(52, 3, 4),
(51, 3, 3),
(50, 3, 2),
(49, 3, 1),
(65, 1, 33),
(66, 1, 34),
(67, 1, 35),
(68, 1, 36),
(69, 1, 37),
(70, 1, 38),
(71, 1, 39),
(72, 1, 40),
(73, 1, 41),
(74, 1, 42),
(75, 1, 43),
(76, 1, 44),
(77, 1, 45),
(78, 1, 46),
(79, 1, 47),
(80, 1, 48),
(81, 1, 49),
(82, 1, 50),
(83, 1, 51),
(84, 1, 52),
(85, 1, 53),
(86, 1, 54),
(87, 1, 55),
(88, 1, 56),
(89, 1, 57),
(90, 1, 58),
(91, 1, 59),
(92, 1, 60),
(93, 1, 61),
(94, 1, 62),
(95, 1, 63),
(96, 1, 64),
(97, 1, 65),
(98, 1, 66),
(99, 1, 67),
(100, 1, 68);

-- --------------------------------------------------------

--
-- Structure de la table `groupe_user`
--

DROP TABLE IF EXISTS `groupe_user`;
CREATE TABLE IF NOT EXISTS `groupe_user` (
  `id_groupe_user` int(10) NOT NULL AUTO_INCREMENT,
  `nom` varchar(50) NOT NULL,
  PRIMARY KEY (`id_groupe_user`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `groupe_user`
--

INSERT INTO `groupe_user` (`id_groupe_user`, `nom`) VALUES
(1, 'Super administrateur'),
(2, 'Administrateur'),
(3, 'User');

-- --------------------------------------------------------

--
-- Structure de la table `lang`
--

DROP TABLE IF EXISTS `lang`;
CREATE TABLE IF NOT EXISTS `lang` (
  `id_lang` int(2) NOT NULL AUTO_INCREMENT,
  `iso` varchar(2) NOT NULL,
  `langue` varchar(20) NOT NULL,
  PRIMARY KEY (`id_lang`),
  KEY `iso` (`iso`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `lang`
--

INSERT INTO `lang` (`id_lang`, `iso`, `langue`) VALUES
(1, 'fr', 'Fran&ccedil;ais'),
(2, 'en', 'English');

-- --------------------------------------------------------

--
-- Structure de la table `plan`
--

DROP TABLE IF EXISTS `plan`;
CREATE TABLE IF NOT EXISTS `plan` (
  `id_plan` int(11) NOT NULL AUTO_INCREMENT,
  `id_site` int(11) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `image` text NOT NULL,
  `image_tri` text NOT NULL,
  `ros_resolution` int(3) NOT NULL,
  `ros_largeur` int(6) NOT NULL,
  `ros_hauteur` int(6) NOT NULL,
  PRIMARY KEY (`id_plan`),
  KEY `id_robot` (`id_site`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=60 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `plan`
--

INSERT INTO `plan` (`id_plan`, `id_site`, `nom`, `image`, `image_tri`, `ros_resolution`, `ros_largeur`, `ros_hauteur`) VALUES
(49, 1, 'test', '', '', 5, 1407, 503),
(53, 0, 'test_save', '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', 5, 1407, 503);
INSERT INTO `plan` (`id_plan`, `id_site`, `nom`, `image`, `image_tri`, `ros_resolution`, `ros_largeur`, `ros_hauteur`) VALUES
(54, 1, 'test', '', '', 5, 336, 1073);
INSERT INTO `plan` (`id_plan`, `id_site`, `nom`, `image`, `image_tri`, `ros_resolution`, `ros_largeur`, `ros_hauteur`) VALUES
(55, 1, 'test tri', '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', 5, 389, 884),
(56, 1, 'test tri 2', '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', 5, 305, 452),
(57, 1, 'test tri 2', '', 'iVBORw0KGgoAAAANSUhEUgAAATEAAAHEAgMAAAAsVPVRAAAADFBMVEUAAAD////IyMj///9fQqgzAAAFRUlEQVR4nO3dzY6bOhQHcJRuRnQxr1B1VVHpziPMq0XppmIWfQXUbhBZ8AZNlVXFU1SzumLTKKsojfAFAgSwsY39Z8pcjncTmB/HPmCbjxAnApa1Q5qN5kG1wEVqmEIaaaSRRhpppC1DCxejBVDtK2mkSbUNVPNJI02quVDNI420l9MwQz1ppOlpmKGeNNL0NMxksNZ80kiTai5SCz2khiqTaB5pJhpocH4FGuYqUq2BBplXoIEGwErzSSNNqrlQzYNq/0C1hxlrjylUO0O1DKiFWG3HsFoK1TBpmEALGMOkodS+MYZJQ6OlMO0TVHvKNUgaGg2ShkbL07CCaoHjIrQvrEqDrXfTztXfnq12z1ppcJzQOEBeiwJ3baU9MNY5tgLTU7mWlt4+DZ2V0Wyi0MJHxvpHQ+D4BvkoY7tqvaNhE70Hanl2Rx8cLY3v4kZP/FvtxndKo3e8tsZ3IxvfQNsxPqn1Ys9UE44No1JRahUm7s3DEf2KVIuvTble6aajo3UbLm5tQbMfKLSg1toNt60/K8PTrG5XSzmrKPGZaWa3q9VVZf1yjtPIUZ9WFNrX23+JrXI7WcTWKq7QvjX/kw1Y5YZilqqq29d2Q1geHvudV1faLXc1jfJnLTk4RmuMBcPVLbRP4zSWDV5QFGh/1N5pdTeoPfXWTTXi++XqaufqEJUWYeMV2pf+mtnwXndbR7QrC7VyL9ZovrQfn1grue9qrl/dQrsXVaRYqGy+rDdjGdKu3clWtKRT0vV7He1wrcROFR1rTzAK7UG02nO1gjq8s562voan5FjTaedaPdR3yz5qLuHsdLw8xLDUhGvvW42rrm1ZTqUmXNTWNMM7DGvJlQmrHVQnvKvmPA5rt7sj6vCO5bqOs+LTmtyqWY3MyvD21Xm9QPNbrVZXVxGeX9dDruUD+LWvlR+4jfbILXKjbrlT78rusOb1tCjceIrwak1wOHBaPsP4LG89b5QWRZ+lyR2r1ddLxeE1Grc4G9DqIsAyc02QDYl2UWl8eJdG4zakofXDa7SA19RY1MvGJbLUOjuLRDvpae3wTs0dKE77pavdsiHRnlVGq8RKba8i+PAOtcbPVZNRWhkeTiuycQRq0Vai+aO14grFFFp/Ho3W3PFaVGv8fHA+GpcFZdcr09b9iY2VFgWOA9Ry7w1S67adzrAg1Z6g2v1r0U5YzQgb0g7/Yy18YD/e4rQ713Waif6IoV6o5Wc03m1SYa0VpdHGTBzU2riJg0Q7fARpYZGFH47zERdbEuZnmIYPAfHaufjQ8JagUDN+YITXbG59Llmzude+aC0lbQaaxfMTi9YsOpFFaxadCGk4LSXNSDPvRJatmXcipOE0805k4Vq6GO1fqGZ4hWtAM7wa0tM21T2WnxAtcN4Atfr+FEqLZ6xha7pFHvWVZjwECjXM3ltrxg+WC7XxD/a+mJZBtYvx1wNfQDP+sqFQ86HajGM7QLXjcjRvllqE1/ZQLVmM9hOquaaYUDMeTkXaxXiQEWrm30EnDaadfKRm3vWSNldt78K0nU3XS9pcNReqfcBqxtiitQyqXd4htYPFy2t47Wjx8hqB5i9Fe4Zqe6iWzFaLWeJCNW++msWwINA8qGYxyPCa4XPCQ5oFJqgpVktJI4202Ws2L/yZVtuSRhppk2i4Z7ZJI420abQIrOG+cUAaaaRNpqWkkUYaXLN6BTJpM9WSGWs+VDPHpte8OWv+bLUMqmm+tekvaR5pBtoJqcXHWWvmRaBZ/OTP1NozVEuWoln9OkxP8x1P9ibikVrgKd/iPEKzLKTNQvsPxp1ypeQeBZ4AAAAASUVORK5CYII=', 5, 305, 452),
(58, 1, 'toto', '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', 5, 441, 138);
INSERT INTO `plan` (`id_plan`, `id_site`, `nom`, `image`, `image_tri`, `ros_resolution`, `ros_largeur`, `ros_hauteur`) VALUES
(59, 1, 'ttttt', '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', 5, 384, 324);

-- --------------------------------------------------------

--
-- Structure de la table `poi`
--

DROP TABLE IF EXISTS `poi`;
CREATE TABLE IF NOT EXISTS `poi` (
  `id_poi` int(10) NOT NULL AUTO_INCREMENT,
  `id_plan` int(11) NOT NULL,
  `x_ros` decimal(8,4) NOT NULL,
  `y_ros` decimal(8,4) NOT NULL,
  `t_ros` decimal(8,4) NOT NULL,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id_poi`),
  KEY `id_map` (`id_plan`)
) ENGINE=MyISAM AUTO_INCREMENT=58 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `poi`
--

INSERT INTO `poi` (`id_poi`, `id_plan`, `x_ros`, `y_ros`, `t_ros`, `name`) VALUES
(50, 49, '17.3707', '15.0073', '-0.0569', 'POI 401'),
(51, 49, '6.0129', '13.3294', '1.4249', 'entrÃ©e'),
(57, 57, '1.5184', '15.4102', '0.2443', 'poit'),
(53, 49, '55.4230', '15.2612', '8.3577', 'fond'),
(54, 49, '47.5844', '16.3372', '16.3372', 'poi loin');

-- --------------------------------------------------------

--
-- Structure de la table `robot_config`
--

DROP TABLE IF EXISTS `robot_config`;
CREATE TABLE IF NOT EXISTS `robot_config` (
  `id_robot_config` int(10) NOT NULL AUTO_INCREMENT,
  `id_site` int(10) NOT NULL,
  `date` datetime NOT NULL,
  `modifications` text NOT NULL,
  `update_by` enum('Server','Robot') NOT NULL DEFAULT 'Server',
  PRIMARY KEY (`id_robot_config`),
  KEY `id_robot` (`id_site`),
  KEY `date` (`date`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `robot_config`
--

INSERT INTO `robot_config` (`id_robot_config`, `id_site`, `date`, `modifications`, `update_by`) VALUES
(1, 1, '2019-12-09 00:00:00', '', 'Server'),
(2, 1, '2020-02-04 09:55:56', 'Update map data', 'Server'),
(3, 1, '2020-02-06 12:10:57', 'Update map data', 'Server');

-- --------------------------------------------------------

--
-- Structure de la table `robot_config_value`
--

DROP TABLE IF EXISTS `robot_config_value`;
CREATE TABLE IF NOT EXISTS `robot_config_value` (
  `id_robot_config_value` int(10) NOT NULL AUTO_INCREMENT,
  `id_robot_config` int(10) NOT NULL,
  `directory` varchar(255) NOT NULL,
  `file` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `data` text NOT NULL,
  `is_file` tinyint(1) NOT NULL DEFAULT '0',
  `date_upd_robot` datetime NOT NULL,
  `date_upd_server` datetime NOT NULL,
  PRIMARY KEY (`id_robot_config_value`),
  KEY `id_robot_config` (`id_robot_config`),
  KEY `dir` (`directory`),
  KEY `file` (`file`),
  KEY `is_file` (`is_file`),
  KEY `date_upd_robot` (`date_upd_robot`),
  KEY `date_upd_server` (`date_upd_server`)
) ENGINE=MyISAM AUTO_INCREMENT=2719 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `robot_config_value`
--

INSERT INTO `robot_config_value` (`id_robot_config_value`, `id_robot_config`, `directory`, `file`, `name`, `data`, `is_file`, `date_upd_robot`, `date_upd_server`) VALUES
(1, 1, '/auth', 'interface_urls.yaml', '', 'page_list: \"https://traxdev.wyca-solutions.com/robot_hmi/mapping/robot.php?id_robot=1&code=rXy5Q9LFbjdzVx7E2rbg\"', 0, '0000-00-00 00:00:00', '2019-08-13 08:08:53'),
(2, 1, '/auth', 'port.yaml', '', 'port: 9090', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:03'),
(3, 1, '/auth', 'valid.secret', '', 'zSk81+WIgWIfbl|O', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:12'),
(4, 1, '/collision_velocity_filter', 'collision_velocity_filter_params.yaml', '', 'footprint_update_frequency: 0.1\r\npot_ctrl_vmax: 0.4\r\npot_ctrl_vtheta_max: 0.4\r\npot_ctrl_kv: 1.0\r\npot_ctrl_kp: 2.0\r\npot_ctrl_virt_mass: 0.8\r\ninfluence_radius: 2.0\r\nobstacle_damping_dist: 1.5\r\nstop_threshold: 0.0\r\nuse_circumscribed_threshold: 0.2\r\ncostmap_obstacle_treshold: 100\r\nis_robot_circular: true\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:13:04'),
(5, 1, '/collision_velocity_filter', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(6, 1, '/docking', 'odom_simple_goal.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n control_linear_P_gain: 1.0\r\n control_angular_P_gain: 2.0\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.1\r\n max_angular_velocity: 0.3\r\n max_linear_acceleration: 0.1\r\n max_angular_acceleration: 3.5\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.4\r\n US_sensor_ext_threshold: 0.4\r\n\r\n obstacle_pause_duration: 1.0\r\n #set 0 for infinite consecutive iteration\r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(7, 1, '/docking', 'offset.yaml', '', 'offset: 0.01\r\nundock_distance: 0.3\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(8, 1, '/docking', 'routine_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.5\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: -0.5\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 2\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n- id: 3\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 4\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 5\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 6\r\n  x: 0\r\n  y: 0\r\n  theta: 1.57079632679489661923\r\n  direction: -1\r\n- id: 7\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 8\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 9\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(9, 1, '/docking', 'undock_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.2\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n control_linear_P_gain: 1.0 \r\n control_angular_P_gain: 2.0 \r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: 0\r\n  y: 0\r\n  theta: -2.5\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(10, 1, '/joy', 'xboxOverride.config.yaml', '', 'axis_linear: 4  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.0\r\n\r\naxis_angular: 3  # Left thumb stick horizontal\r\nscale_angular: 1\r\n\r\nenable_button: 5  # Right  trigger button\r\n#enable_turbo_button: 14  # low digital cross button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(11, 1, '/joy', 'xboxSafe.config.yaml', '', 'axis_linear: 1  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.5\r\n\r\naxis_angular: 0  # Left thumb stick horizontal\r\nscale_angular: 0.8\r\n\r\nenable_button: 4  # Left trigger button\r\n#enable_turbo_button: 5  # Right trigger button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(12, 1, '/laser_filter', 'scan_filter.yaml', '', 'scan_filter_chain:\r\n- name: shadows\r\n  type: laser_filters/ScanShadowsFilter\r\n  params:\r\n    min_angle: 1\r\n    max_angle: 179\r\n    neighbors: 25\r\n    window: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(13, 1, '/leds', 'leds.yaml', '', 'CON_ANIM: 4\r\nCON_R: 255\r\nCON_G: 75\r\nCON_B: 0\r\nAU_ANIM: 5\r\nAU_R: 204\r\nAU_G: 0\r\nAU_B: 0\r\nMOVE_ANIM: 9\r\nMOVE_R: 0\r\nMOVE_G: 0\r\nMOVE_B: 255\r\nCHARGE_ANIM: 2\r\nCHARGE_R: 0\r\nCHARGE_G: 215\r\nCHARGE_B: 0\r\nARRET_ANIM: 4\r\nARRET_R: 0\r\nARRET_G: 0\r\nARRET_B: 255\r\nMAN_ANIM: 4\r\nMAN_R: 0\r\nMAN_G: 0\r\nMAN_B: 255\r\nLIGHT_ANIM: 10\r\nLIGHT_R: 255\r\nLIGHT_G: 255\r\nLIGHT_B: 255\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(14, 1, '/nav', 'amcl.yaml', '', 'odom_model_type: \"diff-corrected\"\r\n#expected noise in odometry\'s rotation estimate from the rotational component of the robot\'s motion\r\nodom_alpha1: 0.01\r\n#expected noise in odometry\'s rotation estimate from translational component of the robot\'s motion\r\nodom_alpha2: 0.03\r\n#expected noise in odometry\'s translation estimate from the translational component of the robot\'s motion.\r\nodom_alpha3: 0.03\r\n#expected noise in odometry\'s translation estimate from the rotational component of the robot\'s motion\r\nodom_alpha4: 0.01\r\n#Translation-related noise parameter (only used if model is \"omni\")\r\nodom_alpha5: 0.003\r\n\r\ntransform_tolerance: 0.2\r\ngui_publish_rate: 10.0\r\nlaser_max_beams: 30\r\nmin_particles: 500\r\nmax_particles: 5000\r\nkld_err: 0.05\r\nkld_z: 0.99\r\n\r\ndo_beamskip: true\r\n\r\nlaser_model_type: \"likelihood_field\"\r\nlaser_z_hit: 0.95\r\nlaser_z_short: 0.05\r\nlaser_z_max: 0.05\r\nlaser_z_rand: 0.05\r\nlaser_sigma_hit: 0.2\r\nlaser_lambda_short: 0.1\r\nlaser_lambda_short: 0.1\r\nlaser_likelihood_max_dist: 2.0\r\n\r\nupdate_min_d: 0.05\r\nupdate_min_a: 0.05\r\nodom_frame_id: \"odom\"\r\nresample_interval: 1\r\nrecovery_alpha_slow: 0.0\r\nrecovery_alpha_fast: 0.0\r\ninitial_pose_x: 0\r\ninitial_pose_y: 0\r\ninitial_pose_a: 0\r\nbase_frame_id: \"base_footprint\"\r\nglobal_frame_id: \"map\"\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(15, 1, '/nav', 'costmap_common_params.yaml', '', '\r\n\r\ntransform_tolerance: 0.2\r\nmap_type: costmap\r\nrobot_radius: 0.26\r\n\r\nobstacle_layer:\r\n enabled: true\r\n obstacle_range: 5.6\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor_marking laser_scan_sensor_clearing\r\n laser_scan_sensor_marking: {data_type: LaserScan, topic: scan_nan_cleaned, marking: false, clearing: true, inf_is_valid: true}\r\n laser_scan_sensor_clearing: {data_type: LaserScan, topic: scan_filtered, marking: true, clearing: false, inf_is_valid: true}\r\n\r\nobstacle_layer_noisy:\r\n enabled: true\r\n obstacle_range: 3.0\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor \r\n\r\n laser_scan_sensor: {data_type: LaserScan, topic: scan_nan_cleaned, marking: true, clearing: true, inf_is_valid: true}\r\n\r\n r200_3d: {data_type: PointCloud2, topic: camera/depth/points, marking: true, clearing: true, inf_is_valid: true, max_obstacle_height: 1.3, min_obstacle_height: 0.1}\r\n\r\n\r\ninflation_layer:\r\n  enabled:              true\r\n  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)\r\n  inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.\r\n\r\nsonar_layer:\r\n  clear_threshold:    0.2\r\n  mark_threshold:     0.7\r\n  no_readings_timeout: 0.0\r\n  ns:     /sensors/US\r\n  clear_on_max_reading: true\r\n  topics: [\"US_front_ext_left\", \"US_front_ext_right\", \"US_front_int_left\", \"US_front_int_right\", \"US_back_ext_left\", \"US_back_ext_right\", \"US_back_int_left\", \"US_back_int_right\"]\r\n\r\nstatic_layer:\r\n  enabled:              true\r\n  map_topic:            \"/map_forbidden_zones\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(16, 1, '/nav', 'global_costmap_params.yaml', '', '\r\nglobal_costmap:\r\n  global_frame: map\r\n  robot_base_frame: base_link\r\n  update_frequency: 1.0\r\n  publish_frequency: 0.5\r\n  static_map: true\r\n\r\n  transform_tolerance: 0.5\r\n\r\n  plugins:\r\n    - {name: static_layer,            type: \"costmap_2d::StaticLayer\"}\r\n    - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(17, 1, '/nav', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(18, 1, '/nav', 'teb_local_planner_params.yaml', '', 'recovery_behavior_enabled: False\r\n\r\nTebLocalPlannerROS:\r\n\r\n odom_topic: odom\r\n map_frame: map\r\n    \r\n # Trajectory\r\n  \r\n teb_autosize: True\r\n dt_ref: 0.3\r\n dt_hysteresis: 0.1\r\n global_plan_overwrite_orientation: True\r\n max_global_plan_lookahead_dist: 7.0\r\n feasibility_check_no_poses: 3\r\n    \r\n # Robot\r\n         \r\n max_vel_x: 0.5\r\n max_vel_x_backwards: 0.11\r\n max_vel_y: 0.0\r\n max_vel_theta: 1.5\r\n acc_lim_x: 0.1\r\n acc_lim_theta: 0.8\r\n min_turning_radius: 0.0\r\n footprint_model: # types: \"point\", \"circular\", \"two_circles\", \"line\", \"polygon\"\r\n   type: \"circular\"\r\n   radius: 0.27 # for type \"circular\"\r\n   line_start: [-0.3, 0.0] # for type \"line\"\r\n   line_end: [0.3, 0.0] # for type \"line\"\r\n   front_offset: 0.2 # for type \"two_circles\"\r\n   front_radius: 0.2 # for type \"two_circles\"\r\n   rear_offset: 0.2 # for type \"two_circles\"\r\n   rear_radius: 0.2 # for type \"two_circles\"\r\n   vertices: [[-0.27, 0.315], [0.27, 0.315], [0.27, -0.315], [-0.27, -0.315]] # for type \"polygon\"\r\n\r\n # GoalTolerance\r\n    \r\n xy_goal_tolerance: 0.2\r\n yaw_goal_tolerance: 0.1\r\n free_goal_vel: False\r\n    \r\n # Obstacles\r\n \r\n inflation_dist: 0.27    \r\n min_obstacle_dist: 0.1\r\n include_costmap_obstacles: True\r\n costmap_obstacles_behind_robot_dist: 1.0\r\n obstacle_poses_affected: 30\r\n costmap_converter_plugin: \"\"\r\n costmap_converter_spin_thread: True\r\n costmap_converter_rate: 5\r\n\r\n # Optimization\r\n    \r\n no_inner_iterations: 2\r\n no_outer_iterations: 2\r\n optimization_activate: True\r\n optimization_verbose: False\r\n penalty_epsilon: 0.05\r\n weight_max_vel_x: 2\r\n weight_max_vel_theta: 1\r\n weight_acc_lim_x: 1\r\n weight_acc_lim_theta: 1\r\n weight_kinematics_nh: 1000\r\n weight_kinematics_forward_drive: 100\r\n weight_kinematics_turning_radius: 1\r\n weight_optimaltime: 1\r\n weight_obstacle: 50\r\n weight_dynamic_obstacle: 10 # not in use yet\r\n alternative_time_cost: False # not in use yet\r\n\r\n # Homotopy Class Planner\r\n\r\n enable_homotopy_class_planning: False\r\n enable_multithreading: True\r\n simple_exploration: False\r\n max_number_classes: 1\r\n selection_cost_hysteresis: 1.0\r\n selection_obst_cost_scale: 1.0\r\n selection_alternative_time_cost: False\r\n \r\n roadmap_graph_no_samples: 15\r\n roadmap_graph_area_width: 5\r\n h_signature_prescaler: 0.5\r\n h_signature_threshold: 0.1\r\n obstacle_keypoint_offset: 0.1\r\n obstacle_heading_threshold: 0.45\r\n visualize_hc_graph: False\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(19, 1, '/poses', 'poses.yaml', '', 'dock1: {theta: [DOCK_T], x: [DOCK_X], y: [DOCK_Y]}\r\nstart1: {theta: [START_T], x: [START_X], y: [START_Y]}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:10:05'),
(20, 1, '/stats', 'locker.yaml', '', '{history_empty_errors: 0, history_lockers_distributed: 0, locker_count: 0}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:10:26'),
(21, 1, '/teleop_velocity_smoother', 'limits.yaml', '', '# Example configuration:\r\n# - velocity limits are around a 10% above the physical limits\r\n# - acceleration limits are just low enough to avoid jerking\r\n\r\n# Mandatory parameters\r\nspeed_lim_v: 1.2\r\nspeed_lim_w: 1.5\r\n\r\naccel_lim_v: 1.2\r\naccel_lim_w: 8.0\r\n\r\n# Optional parameters\r\nfrequency: 20.0\r\ndecel_factor: 1.0\r\n\r\n# Robot velocity feedback type:\r\n#  0 - none\r\n#  1 - odometry\r\n#  2 - end robot commands\r\nrobot_feedback: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(22, 1, '/twist_mux', 'twist_mux_locks_l1.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n  name    : RELAY_BLOCK\r\n  topic   : /relays/connect_dock_power_supply\r\n  timeout : 0.0\r\n  priority: 255\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(23, 1, '/twist_mux', 'twist_mux_locks_l2.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(24, 1, '/twist_mux', 'twist_mux_topics_l1.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : navigation\r\n  topic   : navigation_stack/cmd_vel\r\n  timeout : 0.5\r\n  priority: 10\r\n-\r\n  name    : docking\r\n  topic   : /cmd_vel/docking\r\n  timeout : 0.5\r\n  priority: 40\r\n-\r\n  name    : teleop\r\n  topic   : /cmd_vel/teleop_smoothed\r\n  timeout : 0.5\r\n  priority: 50\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(25, 1, '/twist_mux', 'twist_mux_topics_l2.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : teleop_safe\r\n  topic   : /cmd_vel/teleop_safe\r\n  timeout : 0.5\r\n  priority: 50\r\n-\r\n  name    : joystick_unsafe\r\n  topic   : /cmd_vel/teleop_unsafe\r\n  timeout : 0.5\r\n  priority: 250\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2716, 3, '/map', 'map_areas.png', '', '', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2717, 3, '/map', 'map_areas.yaml', '', 'image: map_areas.png\r\nresolution: 0.05\r\norigin: [0.0, 0.0, 0.0]\r\noccupied_thresh: 0.65\r\nfree_thresh: 0.196\r\nnegate: 0\r\nmode: raw\r\n', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2718, 3, '/map', 'areas.yaml', '', '', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2715, 3, '/map', 'map_forbidden.png', '', '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', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2714, 3, '/map', 'map_amcl.png', '', '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', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2713, 3, '/twist_mux', 'twist_mux_topics_l2.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : teleop_safe\r\n  topic   : /cmd_vel/teleop_safe\r\n  timeout : 0.5\r\n  priority: 50\r\n-\r\n  name    : joystick_unsafe\r\n  topic   : /cmd_vel/teleop_unsafe\r\n  timeout : 0.5\r\n  priority: 250\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2712, 3, '/twist_mux', 'twist_mux_topics_l1.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : navigation\r\n  topic   : navigation_stack/cmd_vel\r\n  timeout : 0.5\r\n  priority: 10\r\n-\r\n  name    : docking\r\n  topic   : /cmd_vel/docking\r\n  timeout : 0.5\r\n  priority: 40\r\n-\r\n  name    : teleop\r\n  topic   : /cmd_vel/teleop_smoothed\r\n  timeout : 0.5\r\n  priority: 50\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2711, 3, '/twist_mux', 'twist_mux_locks_l2.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2710, 3, '/twist_mux', 'twist_mux_locks_l1.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n  name    : RELAY_BLOCK\r\n  topic   : /relays/connect_dock_power_supply\r\n  timeout : 0.0\r\n  priority: 255\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2708, 3, '/stats', 'locker.yaml', '', '{history_empty_errors: 0, history_lockers_distributed: 0, locker_count: 0}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:10:26'),
(2709, 3, '/teleop_velocity_smoother', 'limits.yaml', '', '# Example configuration:\r\n# - velocity limits are around a 10% above the physical limits\r\n# - acceleration limits are just low enough to avoid jerking\r\n\r\n# Mandatory parameters\r\nspeed_lim_v: 1.2\r\nspeed_lim_w: 1.5\r\n\r\naccel_lim_v: 1.2\r\naccel_lim_w: 8.0\r\n\r\n# Optional parameters\r\nfrequency: 20.0\r\ndecel_factor: 1.0\r\n\r\n# Robot velocity feedback type:\r\n#  0 - none\r\n#  1 - odometry\r\n#  2 - end robot commands\r\nrobot_feedback: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2701, 3, '/leds', 'leds.yaml', '', 'CON_ANIM: 4\r\nCON_R: 255\r\nCON_G: 75\r\nCON_B: 0\r\nAU_ANIM: 5\r\nAU_R: 204\r\nAU_G: 0\r\nAU_B: 0\r\nMOVE_ANIM: 9\r\nMOVE_R: 0\r\nMOVE_G: 0\r\nMOVE_B: 255\r\nCHARGE_ANIM: 2\r\nCHARGE_R: 0\r\nCHARGE_G: 215\r\nCHARGE_B: 0\r\nARRET_ANIM: 4\r\nARRET_R: 0\r\nARRET_G: 0\r\nARRET_B: 255\r\nMAN_ANIM: 4\r\nMAN_R: 0\r\nMAN_G: 0\r\nMAN_B: 255\r\nLIGHT_ANIM: 10\r\nLIGHT_R: 255\r\nLIGHT_G: 255\r\nLIGHT_B: 255\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2702, 3, '/nav', 'amcl.yaml', '', 'odom_model_type: \"diff-corrected\"\r\n#expected noise in odometry\'s rotation estimate from the rotational component of the robot\'s motion\r\nodom_alpha1: 0.01\r\n#expected noise in odometry\'s rotation estimate from translational component of the robot\'s motion\r\nodom_alpha2: 0.03\r\n#expected noise in odometry\'s translation estimate from the translational component of the robot\'s motion.\r\nodom_alpha3: 0.03\r\n#expected noise in odometry\'s translation estimate from the rotational component of the robot\'s motion\r\nodom_alpha4: 0.01\r\n#Translation-related noise parameter (only used if model is \"omni\")\r\nodom_alpha5: 0.003\r\n\r\ntransform_tolerance: 0.2\r\ngui_publish_rate: 10.0\r\nlaser_max_beams: 30\r\nmin_particles: 500\r\nmax_particles: 5000\r\nkld_err: 0.05\r\nkld_z: 0.99\r\n\r\ndo_beamskip: true\r\n\r\nlaser_model_type: \"likelihood_field\"\r\nlaser_z_hit: 0.95\r\nlaser_z_short: 0.05\r\nlaser_z_max: 0.05\r\nlaser_z_rand: 0.05\r\nlaser_sigma_hit: 0.2\r\nlaser_lambda_short: 0.1\r\nlaser_lambda_short: 0.1\r\nlaser_likelihood_max_dist: 2.0\r\n\r\nupdate_min_d: 0.05\r\nupdate_min_a: 0.05\r\nodom_frame_id: \"odom\"\r\nresample_interval: 1\r\nrecovery_alpha_slow: 0.0\r\nrecovery_alpha_fast: 0.0\r\ninitial_pose_x: 0\r\ninitial_pose_y: 0\r\ninitial_pose_a: 0\r\nbase_frame_id: \"base_footprint\"\r\nglobal_frame_id: \"map\"\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2703, 3, '/nav', 'costmap_common_params.yaml', '', '\r\n\r\ntransform_tolerance: 0.2\r\nmap_type: costmap\r\nrobot_radius: 0.26\r\n\r\nobstacle_layer:\r\n enabled: true\r\n obstacle_range: 5.6\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor_marking laser_scan_sensor_clearing\r\n laser_scan_sensor_marking: {data_type: LaserScan, topic: scan_nan_cleaned, marking: false, clearing: true, inf_is_valid: true}\r\n laser_scan_sensor_clearing: {data_type: LaserScan, topic: scan_filtered, marking: true, clearing: false, inf_is_valid: true}\r\n\r\nobstacle_layer_noisy:\r\n enabled: true\r\n obstacle_range: 3.0\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor \r\n\r\n laser_scan_sensor: {data_type: LaserScan, topic: scan_nan_cleaned, marking: true, clearing: true, inf_is_valid: true}\r\n\r\n r200_3d: {data_type: PointCloud2, topic: camera/depth/points, marking: true, clearing: true, inf_is_valid: true, max_obstacle_height: 1.3, min_obstacle_height: 0.1}\r\n\r\n\r\ninflation_layer:\r\n  enabled:              true\r\n  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)\r\n  inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.\r\n\r\nsonar_layer:\r\n  clear_threshold:    0.2\r\n  mark_threshold:     0.7\r\n  no_readings_timeout: 0.0\r\n  ns:     /sensors/US\r\n  clear_on_max_reading: true\r\n  topics: [\"US_front_ext_left\", \"US_front_ext_right\", \"US_front_int_left\", \"US_front_int_right\", \"US_back_ext_left\", \"US_back_ext_right\", \"US_back_int_left\", \"US_back_int_right\"]\r\n\r\nstatic_layer:\r\n  enabled:              true\r\n  map_topic:            \"/map_forbidden_zones\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2704, 3, '/nav', 'global_costmap_params.yaml', '', '\r\nglobal_costmap:\r\n  global_frame: map\r\n  robot_base_frame: base_link\r\n  update_frequency: 1.0\r\n  publish_frequency: 0.5\r\n  static_map: true\r\n\r\n  transform_tolerance: 0.5\r\n\r\n  plugins:\r\n    - {name: static_layer,            type: \"costmap_2d::StaticLayer\"}\r\n    - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2705, 3, '/nav', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2706, 3, '/nav', 'teb_local_planner_params.yaml', '', 'recovery_behavior_enabled: False\r\n\r\nTebLocalPlannerROS:\r\n\r\n odom_topic: odom\r\n map_frame: map\r\n    \r\n # Trajectory\r\n  \r\n teb_autosize: True\r\n dt_ref: 0.3\r\n dt_hysteresis: 0.1\r\n global_plan_overwrite_orientation: True\r\n max_global_plan_lookahead_dist: 7.0\r\n feasibility_check_no_poses: 3\r\n    \r\n # Robot\r\n         \r\n max_vel_x: 0.5\r\n max_vel_x_backwards: 0.11\r\n max_vel_y: 0.0\r\n max_vel_theta: 1.5\r\n acc_lim_x: 0.1\r\n acc_lim_theta: 0.8\r\n min_turning_radius: 0.0\r\n footprint_model: # types: \"point\", \"circular\", \"two_circles\", \"line\", \"polygon\"\r\n   type: \"circular\"\r\n   radius: 0.27 # for type \"circular\"\r\n   line_start: [-0.3, 0.0] # for type \"line\"\r\n   line_end: [0.3, 0.0] # for type \"line\"\r\n   front_offset: 0.2 # for type \"two_circles\"\r\n   front_radius: 0.2 # for type \"two_circles\"\r\n   rear_offset: 0.2 # for type \"two_circles\"\r\n   rear_radius: 0.2 # for type \"two_circles\"\r\n   vertices: [[-0.27, 0.315], [0.27, 0.315], [0.27, -0.315], [-0.27, -0.315]] # for type \"polygon\"\r\n\r\n # GoalTolerance\r\n    \r\n xy_goal_tolerance: 0.2\r\n yaw_goal_tolerance: 0.1\r\n free_goal_vel: False\r\n    \r\n # Obstacles\r\n \r\n inflation_dist: 0.27    \r\n min_obstacle_dist: 0.1\r\n include_costmap_obstacles: True\r\n costmap_obstacles_behind_robot_dist: 1.0\r\n obstacle_poses_affected: 30\r\n costmap_converter_plugin: \"\"\r\n costmap_converter_spin_thread: True\r\n costmap_converter_rate: 5\r\n\r\n # Optimization\r\n    \r\n no_inner_iterations: 2\r\n no_outer_iterations: 2\r\n optimization_activate: True\r\n optimization_verbose: False\r\n penalty_epsilon: 0.05\r\n weight_max_vel_x: 2\r\n weight_max_vel_theta: 1\r\n weight_acc_lim_x: 1\r\n weight_acc_lim_theta: 1\r\n weight_kinematics_nh: 1000\r\n weight_kinematics_forward_drive: 100\r\n weight_kinematics_turning_radius: 1\r\n weight_optimaltime: 1\r\n weight_obstacle: 50\r\n weight_dynamic_obstacle: 10 # not in use yet\r\n alternative_time_cost: False # not in use yet\r\n\r\n # Homotopy Class Planner\r\n\r\n enable_homotopy_class_planning: False\r\n enable_multithreading: True\r\n simple_exploration: False\r\n max_number_classes: 1\r\n selection_cost_hysteresis: 1.0\r\n selection_obst_cost_scale: 1.0\r\n selection_alternative_time_cost: False\r\n \r\n roadmap_graph_no_samples: 15\r\n roadmap_graph_area_width: 5\r\n h_signature_prescaler: 0.5\r\n h_signature_threshold: 0.1\r\n obstacle_keypoint_offset: 0.1\r\n obstacle_heading_threshold: 0.45\r\n visualize_hc_graph: False\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2707, 3, '/poses', 'poses.yaml', '', 'dock1: {theta: 0, x: 0, y: 0}\r\nstart1: {theta: 0, x: 0, y: 0}\r\n', 0, '0000-00-00 00:00:00', '2020-02-06 12:10:57'),
(2686, 2, '/map', 'map_areas.png', '', '', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2687, 2, '/map', 'map_areas.yaml', '', 'image: map_areas.png\r\nresolution: 0.05\r\norigin: [0.0, 0.0, 0.0]\r\noccupied_thresh: 0.65\r\nfree_thresh: 0.196\r\nnegate: 0\r\nmode: raw\r\n', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2688, 2, '/map', 'areas.yaml', '', '- area_color: 1\r\n  led_anim: 4\r\n  led_R: 45\r\n  led_G: 186\r\n  led_B: 76\r\n  max_speed: 0\r\n', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2689, 3, '/auth', 'interface_urls.yaml', '', 'page_list: \"https://traxdev.wyca-solutions.com/robot_hmi/mapping/robot.php?id_robot=1&code=rXy5Q9LFbjdzVx7E2rbg\"', 0, '0000-00-00 00:00:00', '2019-08-13 08:08:53'),
(2690, 3, '/auth', 'port.yaml', '', 'port: 9090', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:03'),
(2691, 3, '/auth', 'valid.secret', '', 'zSk81+WIgWIfbl|O', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:12'),
(2692, 3, '/collision_velocity_filter', 'collision_velocity_filter_params.yaml', '', 'footprint_update_frequency: 0.1\r\npot_ctrl_vmax: 0.4\r\npot_ctrl_vtheta_max: 0.4\r\npot_ctrl_kv: 1.0\r\npot_ctrl_kp: 2.0\r\npot_ctrl_virt_mass: 0.8\r\ninfluence_radius: 2.0\r\nobstacle_damping_dist: 1.5\r\nstop_threshold: 0.0\r\nuse_circumscribed_threshold: 0.2\r\ncostmap_obstacle_treshold: 100\r\nis_robot_circular: true\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:13:04'),
(2693, 3, '/collision_velocity_filter', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2694, 3, '/docking', 'odom_simple_goal.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n control_linear_P_gain: 1.0\r\n control_angular_P_gain: 2.0\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.1\r\n max_angular_velocity: 0.3\r\n max_linear_acceleration: 0.1\r\n max_angular_acceleration: 3.5\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.4\r\n US_sensor_ext_threshold: 0.4\r\n\r\n obstacle_pause_duration: 1.0\r\n #set 0 for infinite consecutive iteration\r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2695, 3, '/docking', 'offset.yaml', '', 'offset: 0.01\r\nundock_distance: 0.3\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2696, 3, '/docking', 'routine_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.5\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: -0.5\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 2\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n- id: 3\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 4\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 5\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 6\r\n  x: 0\r\n  y: 0\r\n  theta: 1.57079632679489661923\r\n  direction: -1\r\n- id: 7\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 8\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 9\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2697, 3, '/docking', 'undock_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.2\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n control_linear_P_gain: 1.0 \r\n control_angular_P_gain: 2.0 \r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: 0\r\n  y: 0\r\n  theta: -2.5\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2698, 3, '/joy', 'xboxOverride.config.yaml', '', 'axis_linear: 4  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.0\r\n\r\naxis_angular: 3  # Left thumb stick horizontal\r\nscale_angular: 1\r\n\r\nenable_button: 5  # Right  trigger button\r\n#enable_turbo_button: 14  # low digital cross button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2699, 3, '/joy', 'xboxSafe.config.yaml', '', 'axis_linear: 1  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.5\r\n\r\naxis_angular: 0  # Left thumb stick horizontal\r\nscale_angular: 0.8\r\n\r\nenable_button: 4  # Left trigger button\r\n#enable_turbo_button: 5  # Right trigger button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2700, 3, '/laser_filter', 'scan_filter.yaml', '', 'scan_filter_chain:\r\n- name: shadows\r\n  type: laser_filters/ScanShadowsFilter\r\n  params:\r\n    min_angle: 1\r\n    max_angle: 179\r\n    neighbors: 25\r\n    window: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29');
INSERT INTO `robot_config_value` (`id_robot_config_value`, `id_robot_config`, `directory`, `file`, `name`, `data`, `is_file`, `date_upd_robot`, `date_upd_server`) VALUES
(2685, 2, '/map', 'map_forbidden.png', '', '', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2677, 2, '/poses', 'poses.yaml', '', 'dock1: {theta: 1.5412, x: 6.2743039968981, y: 13.694018969656}\r\nstart1: {theta: 1.5412, x: 6.2891, y: 14.1938}\r\ndock2: {theta: 1.6332, x: 25.203081589417, y: 16.509673238712}\r\nstart2: {theta: 1.6332, x: 25.1719, y: 17.0087}\r\ndock3: {theta: 6.2832, x: 24.121300000054, y: 16.00009265359}\r\nstart3: {theta: 6.2832, x: 24.6213, y: 16.0001}\r\ndock4: {theta: 1.5010, x: 49.405930164261, y: 15.426417387477}\r\nstart4: {theta: 1.5010, x: 49.4408, y: 15.9252}\r\n', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2678, 2, '/stats', 'locker.yaml', '', '{history_empty_errors: 0, history_lockers_distributed: 0, locker_count: 0}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:10:26'),
(2679, 2, '/teleop_velocity_smoother', 'limits.yaml', '', '# Example configuration:\r\n# - velocity limits are around a 10% above the physical limits\r\n# - acceleration limits are just low enough to avoid jerking\r\n\r\n# Mandatory parameters\r\nspeed_lim_v: 1.2\r\nspeed_lim_w: 1.5\r\n\r\naccel_lim_v: 1.2\r\naccel_lim_w: 8.0\r\n\r\n# Optional parameters\r\nfrequency: 20.0\r\ndecel_factor: 1.0\r\n\r\n# Robot velocity feedback type:\r\n#  0 - none\r\n#  1 - odometry\r\n#  2 - end robot commands\r\nrobot_feedback: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2680, 2, '/twist_mux', 'twist_mux_locks_l1.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n  name    : RELAY_BLOCK\r\n  topic   : /relays/connect_dock_power_supply\r\n  timeout : 0.0\r\n  priority: 255\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2681, 2, '/twist_mux', 'twist_mux_locks_l2.yaml', '', '# Locks to stop the twist inputs.\r\n# For each lock:\r\n# - topic   : input topic that provides the lock; it must be of type std_msgs::Bool?!!! \r\n# - timeout : == 0.0 -> not used\r\n#              > 0.0 -> the lock is supposed to published at a certain frequency in order\r\n#                       to detect that the publisher is alive; the timeout in seconds allows\r\n#                       to detect that, and if the publisher dies we will enable the lock\r\n# - priority: priority in the range [0, 255], so all the topics with priority lower than it\r\n#             will be stopped/disabled\r\n\r\nlocks:\r\n-\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2682, 2, '/twist_mux', 'twist_mux_topics_l1.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : navigation\r\n  topic   : navigation_stack/cmd_vel\r\n  timeout : 0.5\r\n  priority: 10\r\n-\r\n  name    : docking\r\n  topic   : /cmd_vel/docking\r\n  timeout : 0.5\r\n  priority: 40\r\n-\r\n  name    : teleop\r\n  topic   : /cmd_vel/teleop_smoothed\r\n  timeout : 0.5\r\n  priority: 50\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2683, 2, '/twist_mux', 'twist_mux_topics_l2.yaml', '', '# Input topics handled/muxed.\r\n# For each topic:\r\n# - name    : name identifier to select the topic\r\n# - topic   : input topic of geometry_msgs::Twist type\r\n# - timeout : timeout in seconds to start discarding old messages, and use 0.0 speed instead\r\n# - priority: priority in the range [0, 255]; the higher the more priority over other topics\r\n\r\ntopics:\r\n-\r\n  name    : teleop_safe\r\n  topic   : /cmd_vel/teleop_safe\r\n  timeout : 0.5\r\n  priority: 50\r\n-\r\n  name    : joystick_unsafe\r\n  topic   : /cmd_vel/teleop_unsafe\r\n  timeout : 0.5\r\n  priority: 250\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2684, 2, '/map', 'map_amcl.png', '', '', 0, '0000-00-00 00:00:00', '2020-02-04 09:55:56'),
(2663, 2, '/collision_velocity_filter', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2664, 2, '/docking', 'odom_simple_goal.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n control_linear_P_gain: 1.0\r\n control_angular_P_gain: 2.0\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.1\r\n max_angular_velocity: 0.3\r\n max_linear_acceleration: 0.1\r\n max_angular_acceleration: 3.5\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.4\r\n US_sensor_ext_threshold: 0.4\r\n\r\n obstacle_pause_duration: 1.0\r\n #set 0 for infinite consecutive iteration\r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2665, 2, '/docking', 'offset.yaml', '', 'offset: 0.01\r\nundock_distance: 0.3\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2666, 2, '/docking', 'routine_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.5\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: -0.5\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 2\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n- id: 3\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 4\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 5\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 6\r\n  x: 0\r\n  y: 0\r\n  theta: 1.57079632679489661923\r\n  direction: -1\r\n- id: 7\r\n  x: 5\r\n  y: 0\r\n  theta: 0\r\n  direction: 0\r\n- id: 8\r\n  x: 0\r\n  y: 0\r\n  theta: -1.57079632679489661923\r\n  direction: -1\r\n- id: 9\r\n  x: 0\r\n  y: 0\r\n  theta: 0.78539816339744830962\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2667, 2, '/docking', 'undock_trajectory.yaml', '', '# config.yaml\r\n\r\nparameters:\r\n control_loop_freq: 20\r\n goal_linear_threshold: 0.02\r\n goal_angular_threshold: 0.02\r\n max_linear_velocity: 0.2\r\n max_angular_velocity: 0.7\r\n max_linear_acceleration: 0.01\r\n max_angular_acceleration: 0.7\r\n loop_indefinitly: false\r\n US_sensor_int_threshold: 0.2\r\n US_sensor_ext_threshold: 0.15\r\n obstacle_pause_duration: 2.0 \r\n #set 0 for infinite consecutive iteration \r\n obstacle_pause_max_consecutive_iterations: 0\r\n control_linear_P_gain: 1.0 \r\n control_angular_P_gain: 2.0 \r\n\r\ngoals:\r\n- id: 0\r\n  x: -0.35\r\n  y: 0\r\n  theta: 0\r\n  direction: -1\r\n- id: 1\r\n  x: 0\r\n  y: 0\r\n  theta: -2.5\r\n  direction: -1\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2668, 2, '/joy', 'xboxOverride.config.yaml', '', 'axis_linear: 4  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.0\r\n\r\naxis_angular: 3  # Left thumb stick horizontal\r\nscale_angular: 1\r\n\r\nenable_button: 5  # Right  trigger button\r\n#enable_turbo_button: 14  # low digital cross button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2669, 2, '/joy', 'xboxSafe.config.yaml', '', 'axis_linear: 1  # Left thumb stick vertical\r\nscale_linear: 0.5\r\nscale_linear_turbo: 1.5\r\n\r\naxis_angular: 0  # Left thumb stick horizontal\r\nscale_angular: 0.8\r\n\r\nenable_button: 4  # Left trigger button\r\n#enable_turbo_button: 5  # Right trigger button\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2670, 2, '/laser_filter', 'scan_filter.yaml', '', 'scan_filter_chain:\r\n- name: shadows\r\n  type: laser_filters/ScanShadowsFilter\r\n  params:\r\n    min_angle: 1\r\n    max_angle: 179\r\n    neighbors: 25\r\n    window: 2\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2671, 2, '/leds', 'leds.yaml', '', 'CON_ANIM: 4\r\nCON_R: 255\r\nCON_G: 75\r\nCON_B: 0\r\nAU_ANIM: 5\r\nAU_R: 204\r\nAU_G: 0\r\nAU_B: 0\r\nMOVE_ANIM: 9\r\nMOVE_R: 0\r\nMOVE_G: 0\r\nMOVE_B: 255\r\nCHARGE_ANIM: 2\r\nCHARGE_R: 0\r\nCHARGE_G: 215\r\nCHARGE_B: 0\r\nARRET_ANIM: 4\r\nARRET_R: 0\r\nARRET_G: 0\r\nARRET_B: 255\r\nMAN_ANIM: 4\r\nMAN_R: 0\r\nMAN_G: 0\r\nMAN_B: 255\r\nLIGHT_ANIM: 10\r\nLIGHT_R: 255\r\nLIGHT_G: 255\r\nLIGHT_B: 255\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2672, 2, '/nav', 'amcl.yaml', '', 'odom_model_type: \"diff-corrected\"\r\n#expected noise in odometry\'s rotation estimate from the rotational component of the robot\'s motion\r\nodom_alpha1: 0.01\r\n#expected noise in odometry\'s rotation estimate from translational component of the robot\'s motion\r\nodom_alpha2: 0.03\r\n#expected noise in odometry\'s translation estimate from the translational component of the robot\'s motion.\r\nodom_alpha3: 0.03\r\n#expected noise in odometry\'s translation estimate from the rotational component of the robot\'s motion\r\nodom_alpha4: 0.01\r\n#Translation-related noise parameter (only used if model is \"omni\")\r\nodom_alpha5: 0.003\r\n\r\ntransform_tolerance: 0.2\r\ngui_publish_rate: 10.0\r\nlaser_max_beams: 30\r\nmin_particles: 500\r\nmax_particles: 5000\r\nkld_err: 0.05\r\nkld_z: 0.99\r\n\r\ndo_beamskip: true\r\n\r\nlaser_model_type: \"likelihood_field\"\r\nlaser_z_hit: 0.95\r\nlaser_z_short: 0.05\r\nlaser_z_max: 0.05\r\nlaser_z_rand: 0.05\r\nlaser_sigma_hit: 0.2\r\nlaser_lambda_short: 0.1\r\nlaser_lambda_short: 0.1\r\nlaser_likelihood_max_dist: 2.0\r\n\r\nupdate_min_d: 0.05\r\nupdate_min_a: 0.05\r\nodom_frame_id: \"odom\"\r\nresample_interval: 1\r\nrecovery_alpha_slow: 0.0\r\nrecovery_alpha_fast: 0.0\r\ninitial_pose_x: 0\r\ninitial_pose_y: 0\r\ninitial_pose_a: 0\r\nbase_frame_id: \"base_footprint\"\r\nglobal_frame_id: \"map\"\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2673, 2, '/nav', 'costmap_common_params.yaml', '', '\r\n\r\ntransform_tolerance: 0.2\r\nmap_type: costmap\r\nrobot_radius: 0.26\r\n\r\nobstacle_layer:\r\n enabled: true\r\n obstacle_range: 5.6\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor_marking laser_scan_sensor_clearing\r\n laser_scan_sensor_marking: {data_type: LaserScan, topic: scan_nan_cleaned, marking: false, clearing: true, inf_is_valid: true}\r\n laser_scan_sensor_clearing: {data_type: LaserScan, topic: scan_filtered, marking: true, clearing: false, inf_is_valid: true}\r\n\r\nobstacle_layer_noisy:\r\n enabled: true\r\n obstacle_range: 3.0\r\n raytrace_range: 4.0\r\n inflation_radius: 0.0\r\n track_unknown_space: true\r\n combination_method: 1\r\n\r\n observation_sources: laser_scan_sensor \r\n\r\n laser_scan_sensor: {data_type: LaserScan, topic: scan_nan_cleaned, marking: true, clearing: true, inf_is_valid: true}\r\n\r\n r200_3d: {data_type: PointCloud2, topic: camera/depth/points, marking: true, clearing: true, inf_is_valid: true, max_obstacle_height: 1.3, min_obstacle_height: 0.1}\r\n\r\n\r\ninflation_layer:\r\n  enabled:              true\r\n  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)\r\n  inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.\r\n\r\nsonar_layer:\r\n  clear_threshold:    0.2\r\n  mark_threshold:     0.7\r\n  no_readings_timeout: 0.0\r\n  ns:     /sensors/US\r\n  clear_on_max_reading: true\r\n  topics: [\"US_front_ext_left\", \"US_front_ext_right\", \"US_front_int_left\", \"US_front_int_right\", \"US_back_ext_left\", \"US_back_ext_right\", \"US_back_int_left\", \"US_back_int_right\"]\r\n\r\nstatic_layer:\r\n  enabled:              true\r\n  map_topic:            \"/map_forbidden_zones\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2674, 2, '/nav', 'global_costmap_params.yaml', '', '\r\nglobal_costmap:\r\n  global_frame: map\r\n  robot_base_frame: base_link\r\n  update_frequency: 1.0\r\n  publish_frequency: 0.5\r\n  static_map: true\r\n\r\n  transform_tolerance: 0.5\r\n\r\n  plugins:\r\n    - {name: static_layer,            type: \"costmap_2d::StaticLayer\"}\r\n    - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2675, 2, '/nav', 'local_costmap_params.yaml', '', 'local_costmap:\r\n  global_frame: odom\r\n  robot_base_frame: base_link\r\n  update_frequency: 20.0\r\n  publish_frequency: 20.0\r\n  static_map: false\r\n  rolling_window: true\r\n  width: 5.5\r\n  height: 5.5\r\n  resolution: 0.05\r\n  transform_tolerance: 0.5\r\n  \r\n  plugins:\r\n   - {name: static_layer,        type: \"costmap_2d::StaticLayer\"}\r\n   - {name: obstacle_layer,      type: \"costmap_2d::ObstacleLayer\"}\r\n   - {name: sonar_layer,      type: \"range_sensor_layer::RangeSensorLayer\"}\r\n   - {name: inflation_layer,         type: \"costmap_2d::InflationLayer\"}\r\n\r\n\r\n\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2676, 2, '/nav', 'teb_local_planner_params.yaml', '', 'recovery_behavior_enabled: False\r\n\r\nTebLocalPlannerROS:\r\n\r\n odom_topic: odom\r\n map_frame: map\r\n    \r\n # Trajectory\r\n  \r\n teb_autosize: True\r\n dt_ref: 0.3\r\n dt_hysteresis: 0.1\r\n global_plan_overwrite_orientation: True\r\n max_global_plan_lookahead_dist: 7.0\r\n feasibility_check_no_poses: 3\r\n    \r\n # Robot\r\n         \r\n max_vel_x: 0.5\r\n max_vel_x_backwards: 0.11\r\n max_vel_y: 0.0\r\n max_vel_theta: 1.5\r\n acc_lim_x: 0.1\r\n acc_lim_theta: 0.8\r\n min_turning_radius: 0.0\r\n footprint_model: # types: \"point\", \"circular\", \"two_circles\", \"line\", \"polygon\"\r\n   type: \"circular\"\r\n   radius: 0.27 # for type \"circular\"\r\n   line_start: [-0.3, 0.0] # for type \"line\"\r\n   line_end: [0.3, 0.0] # for type \"line\"\r\n   front_offset: 0.2 # for type \"two_circles\"\r\n   front_radius: 0.2 # for type \"two_circles\"\r\n   rear_offset: 0.2 # for type \"two_circles\"\r\n   rear_radius: 0.2 # for type \"two_circles\"\r\n   vertices: [[-0.27, 0.315], [0.27, 0.315], [0.27, -0.315], [-0.27, -0.315]] # for type \"polygon\"\r\n\r\n # GoalTolerance\r\n    \r\n xy_goal_tolerance: 0.2\r\n yaw_goal_tolerance: 0.1\r\n free_goal_vel: False\r\n    \r\n # Obstacles\r\n \r\n inflation_dist: 0.27    \r\n min_obstacle_dist: 0.1\r\n include_costmap_obstacles: True\r\n costmap_obstacles_behind_robot_dist: 1.0\r\n obstacle_poses_affected: 30\r\n costmap_converter_plugin: \"\"\r\n costmap_converter_spin_thread: True\r\n costmap_converter_rate: 5\r\n\r\n # Optimization\r\n    \r\n no_inner_iterations: 2\r\n no_outer_iterations: 2\r\n optimization_activate: True\r\n optimization_verbose: False\r\n penalty_epsilon: 0.05\r\n weight_max_vel_x: 2\r\n weight_max_vel_theta: 1\r\n weight_acc_lim_x: 1\r\n weight_acc_lim_theta: 1\r\n weight_kinematics_nh: 1000\r\n weight_kinematics_forward_drive: 100\r\n weight_kinematics_turning_radius: 1\r\n weight_optimaltime: 1\r\n weight_obstacle: 50\r\n weight_dynamic_obstacle: 10 # not in use yet\r\n alternative_time_cost: False # not in use yet\r\n\r\n # Homotopy Class Planner\r\n\r\n enable_homotopy_class_planning: False\r\n enable_multithreading: True\r\n simple_exploration: False\r\n max_number_classes: 1\r\n selection_cost_hysteresis: 1.0\r\n selection_obst_cost_scale: 1.0\r\n selection_alternative_time_cost: False\r\n \r\n roadmap_graph_no_samples: 15\r\n roadmap_graph_area_width: 5\r\n h_signature_prescaler: 0.5\r\n h_signature_threshold: 0.1\r\n obstacle_keypoint_offset: 0.1\r\n obstacle_heading_threshold: 0.45\r\n visualize_hc_graph: False\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:06:29'),
(2659, 2, '/auth', 'interface_urls.yaml', '', 'page_list: \"https://traxdev.wyca-solutions.com/robot_hmi/mapping/robot.php?id_robot=1&code=rXy5Q9LFbjdzVx7E2rbg\"', 0, '0000-00-00 00:00:00', '2019-08-13 08:08:53'),
(2660, 2, '/auth', 'port.yaml', '', 'port: 9090', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:03'),
(2661, 2, '/auth', 'valid.secret', '', 'zSk81+WIgWIfbl|O', 0, '0000-00-00 00:00:00', '2019-08-13 08:09:12'),
(2662, 2, '/collision_velocity_filter', 'collision_velocity_filter_params.yaml', '', 'footprint_update_frequency: 0.1\r\npot_ctrl_vmax: 0.4\r\npot_ctrl_vtheta_max: 0.4\r\npot_ctrl_kv: 1.0\r\npot_ctrl_kp: 2.0\r\npot_ctrl_virt_mass: 0.8\r\ninfluence_radius: 2.0\r\nobstacle_damping_dist: 1.5\r\nstop_threshold: 0.0\r\nuse_circumscribed_threshold: 0.2\r\ncostmap_obstacle_treshold: 100\r\nis_robot_circular: true\r\n', 0, '0000-00-00 00:00:00', '2019-08-13 08:13:04');

-- --------------------------------------------------------

--
-- Structure de la table `site`
--

DROP TABLE IF EXISTS `site`;
CREATE TABLE IF NOT EXISTS `site` (
  `id_site` int(11) NOT NULL AUTO_INCREMENT,
  `nom` varchar(255) NOT NULL,
  PRIMARY KEY (`id_site`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `site`
--

INSERT INTO `site` (`id_site`, `nom`) VALUES
(1, 'Default'),
(2, 'Test 3');

-- --------------------------------------------------------

--
-- Structure de la table `station_recharge`
--

DROP TABLE IF EXISTS `station_recharge`;
CREATE TABLE IF NOT EXISTS `station_recharge` (
  `id_station_recharge` int(11) NOT NULL AUTO_INCREMENT,
  `id_plan` int(11) NOT NULL,
  `x_ros` decimal(8,4) NOT NULL,
  `y_ros` decimal(8,4) NOT NULL,
  `t_ros` decimal(8,4) NOT NULL,
  `num` int(3) NOT NULL,
  PRIMARY KEY (`id_station_recharge`),
  KEY `id_plan` (`id_plan`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `station_recharge`
--

INSERT INTO `station_recharge` (`id_station_recharge`, `id_plan`, `x_ros`, `y_ros`, `t_ros`, `num`) VALUES
(1, 49, '6.2891', '14.1938', '1.5412', 0),
(2, 49, '25.1719', '17.0087', '1.6332', 0),
(3, 49, '24.6213', '16.0001', '6.2832', 0),
(4, 49, '49.4408', '15.9252', '1.5010', 0);

-- --------------------------------------------------------

--
-- Structure de la table `tache`
--

DROP TABLE IF EXISTS `tache`;
CREATE TABLE IF NOT EXISTS `tache` (
  `id_tache` int(11) NOT NULL AUTO_INCREMENT,
  `id_site` int(11) NOT NULL,
  `id_plan` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `action_fin` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id_tache`),
  KEY `id_site` (`id_site`),
  KEY `id_plan` (`id_plan`),
  KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `tache`
--

INSERT INTO `tache` (`id_tache`, `id_site`, `id_plan`, `name`, `action_fin`) VALUES
(1, 1, 49, 'test2', 1),
(2, 1, 49, 'Goto poi and wait 10s', 0),
(3, 1, 49, 'loin', 0);

-- --------------------------------------------------------

--
-- Structure de la table `tache_action`
--

DROP TABLE IF EXISTS `tache_action`;
CREATE TABLE IF NOT EXISTS `tache_action` (
  `id_tache_action` int(11) NOT NULL AUTO_INCREMENT,
  `id_tache` int(11) NOT NULL,
  `action_type` int(2) NOT NULL,
  `action_detail` text NOT NULL,
  `position` int(3) NOT NULL,
  PRIMARY KEY (`id_tache_action`),
  KEY `position` (`position`),
  KEY `id_tache` (`id_tache`)
) ENGINE=MyISAM AUTO_INCREMENT=23 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `tache_action`
--

INSERT INTO `tache_action` (`id_tache_action`, `id_tache`, `action_type`, `action_detail`, `position`) VALUES
(10, 1, 1, '50', 0),
(16, 2, 1, '51', 0),
(14, 1, 3, '5', 1),
(13, 1, 2, '', 3),
(15, 1, 1, '51', 2),
(17, 2, 3, '10', 1),
(18, 1, 1, '50', 4),
(19, 3, 1, '54', 0),
(20, 3, 3, '10', 1),
(21, 3, 1, '53', 2),
(22, 2, 1, '50', 2);

-- --------------------------------------------------------

--
-- Structure de la table `tache_queue`
--

DROP TABLE IF EXISTS `tache_queue`;
CREATE TABLE IF NOT EXISTS `tache_queue` (
  `id_tache_queue` int(11) NOT NULL AUTO_INCREMENT,
  `id_tache` int(11) NOT NULL,
  `position` int(3) NOT NULL,
  `state` varchar(255) NOT NULL,
  `progress` varchar(255) NOT NULL,
  `step` int(3) NOT NULL,
  PRIMARY KEY (`id_tache_queue`),
  KEY `id_tache` (`id_tache`),
  KEY `position` (`position`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Structure de la table `user`
--

DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
  `id_user` int(10) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) NOT NULL,
  `pass` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `prenom` varchar(255) NOT NULL,
  `adresse_1` varchar(255) NOT NULL,
  `adresse_2` varchar(255) NOT NULL,
  `codepostal` varchar(10) NOT NULL,
  `ville` varchar(255) NOT NULL,
  `societe` varchar(255) NOT NULL,
  `tel` varchar(20) NOT NULL,
  `portable` varchar(20) NOT NULL,
  `id_groupe_user` int(10) NOT NULL,
  `actif` tinyint(1) NOT NULL DEFAULT '0',
  `deleted` tinyint(1) NOT NULL DEFAULT '0',
  `tel_sip` int(10) NOT NULL,
  `photo` varchar(255) NOT NULL,
  `last_connection` datetime NOT NULL,
  `online` int(1) NOT NULL,
  `api_key` varchar(255) NOT NULL,
  `id_lang` int(3) NOT NULL DEFAULT '1',
  `acces_suivi` tinyint(1) NOT NULL DEFAULT '0',
  `trax_options` text NOT NULL,
  PRIMARY KEY (`id_user`),
  KEY `actif` (`actif`),
  KEY `deleted` (`deleted`),
  KEY `id_groupe_user` (`id_groupe_user`),
  KEY `email` (`email`),
  KEY `pass` (`pass`),
  KEY `tel_sip` (`tel_sip`)
) ENGINE=MyISAM AUTO_INCREMENT=61 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `user`
--

INSERT INTO `user` (`id_user`, `email`, `pass`, `nom`, `prenom`, `adresse_1`, `adresse_2`, `codepostal`, `ville`, `societe`, `tel`, `portable`, `id_groupe_user`, `actif`, `deleted`, `tel_sip`, `photo`, `last_connection`, `online`, `api_key`, `id_lang`, `acces_suivi`, `trax_options`) VALUES
(1, 'stephane.morillon@smorillon.com', 'e2232c2c6677dcc20e256651eee9eb91', 'MORILLON', 'StÃ©phane', '6 route des Deveses', '', '31410', 'MONTAUT', 'Smorillon.com', '', '0672916946', 1, 1, 0, 5202, 'image73.jpg', '2020-02-06 15:32:25', 0, '5LGU.LaYMMncJaA0i42HwsX9ZX-RCNgj-9V17ROFXt71st', 2, 0, '{\"background_opacity\":100,\"displayHelpAddShelf\":false,\"displayHelpAddSegmentToJob\":false}'),
(10, 'nicolas.deroquette@wyca.fr', 'e17b716e56368a275c40ea1594aa3432', 'De roquette', 'Nicolas', '', '', '', '', 'Wyca', '', '', 3, 1, 0, -1, 'teÌleÌchargement_002.jpeg', '2018-12-19 10:35:10', -1, 'DVHH3wP22Mf4rFBwCDYDqFV5bdz7KhvrsiPh.g7lbDtTom', 2, 0, ''),
(11, 'guillaume.doisy@wyca.fr', '3c902bd85fd9ccc65dcdef2e50806dfa', 'DOISY', 'Guillaume', '', '', '', '', 'Wyca', '', '', 1, 1, 0, -1, '', '2019-08-13 13:38:51', -1, 'Bcx7SqcxvvOjiKrNuwmSBnbUDSvXxfhnJmgwZFKD6zDuvz', 2, 0, ''),
(47, 'patrick.lascombe@wyca.fr', 'd66a325bdc33e13492db7ab16a62738f', 'Lascombes', 'Patrick', '', '', '', '', 'Wyca', '', '', 1, 1, 0, -1, '', '2019-06-24 11:21:57', -1, 'sdf48RTFHG1561wsdfSDRTGS136513sFVED', 1, 0, ''),
(50, 'brice.renaudeau@wyca.fr', 'cea87ec8e72a538e4fc5cd5ff1aba359', 'RENAUDEAU', 'Brice', '', '', '', '', 'Wyca', '', '', 1, 1, 0, -1, '', '2019-07-18 15:52:45', -1, 'JNLCLkjCFTm33ben1qNA8km8u9O0IysDTM.1AzgCV7Bpt9', 1, 0, ''),
(53, 'patrick.dehlinger@wyca.fr', 'e32a479fbf7799206c74da14b1dd7931', 'Dehlinger', 'Patrick', '', '', '', '', 'Wyca', '', '', 2, 1, 0, -1, '', '2019-06-25 18:55:51', -1, 'xTKQbuUb3zDcemNPlzJyrqhk.DNEyp7reuzdi51WlUN3sa', 1, 0, ''),
(60, 'distributor', '751b823926d1ea5b9e4a4678d6ee70c8', 'Distributor', '', '', '', '', '', '', '', '', 3, 1, 0, -1, '', '2020-01-28 15:03:22', -1, 'Jnt.kK2nXB15jhVkCEGLA3NssidZWLpsdgmt4bx8GkTZL5', 2, 0, '');
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
